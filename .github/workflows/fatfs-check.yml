name: FATFS Build Test

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  WOLFSSL_REF: master

jobs:
  build_wolfssl:
    name: Build wolfssl
    runs-on: ubuntu-latest
    timeout-minutes: 4
    steps:
      - name: Checking cache for wolfssl
        uses: actions/cache@v4
        id: cache-wolfssl
        with:
          path: build-dir/
          key: wolfssh-fatfs-check-wolfssl-${{ env.WOLFSSL_REF }}
          lookup-only: true

      - name: Checkout, build, and install wolfssl
        if: steps.cache-wolfssl.outputs.cache-hit != 'true'
        uses: wolfSSL/actions-build-autotools-project@v1
        with:
          repository: wolfssl/wolfssl
          ref: ${{ env.WOLFSSL_REF }}
          path: wolfssl
          configure: --enable-wolfssh --enable-cryptonly
          check: false
          install: true

  build_wolfssh:
    name: Build wolfssh with FATFS
    runs-on: ubuntu-latest
    timeout-minutes: 4
    needs: build_wolfssl
    steps:
      - name: Checking cache for wolfssl
        uses: actions/cache@v4
        with:
          path: build-dir/
          key: wolfssh-fatfs-check-wolfssl-${{ env.WOLFSSL_REF }}
          fail-on-cache-miss: true

      - name: Setup FATFS
        run: |
          git clone https://github.com/abbrev/fatfs.git
          cd fatfs/source
          mkdir -p ${{ github.workspace }}/build-dir/include/{wolfssh,fatfs}
          mkdir -p ${{ github.workspace }}/build-dir/lib/fatfs
          cp *.h ${{ github.workspace }}/build-dir/include/fatfs/
          gcc -c -I${{ github.workspace }}/build-dir/include/fatfs -fPIC *.c
          ar rcs ${{ github.workspace }}/build-dir/lib/fatfs/libfatfs.a *.o
          cp ffconf.h ${{ github.workspace }}/build-dir/include/fatfs/ffconf.h
          echo "#define DIR FATFS_DIR" >> ${{ github.workspace }}/build-dir/include/fatfs/ffconf.h
          echo "#define WOLFSSH_FATFS" > ${{ github.workspace }}/build-dir/include/wolfssh/myFilesystem.h
          echo "#undef WOLFSSH_USER_FILESYSTEM" >> ${{ github.workspace }}/build-dir/include/wolfssh/myFilesystem.h
          echo "#include <ffconf.h>" >> ${{ github.workspace }}/build-dir/include/wolfssh/myFilesystem.h
          echo "#include <ff.h>" >> ${{ github.workspace }}/build-dir/include/wolfssh/myFilesystem.h
          echo "#define WFILE FIL" >> ${{ github.workspace }}/build-dir/include/wolfssh/myFilesystem.h
          echo "#define WFD FIL*" >> ${{ github.workspace }}/build-dir/include/wolfssh/myFilesystem.h
          echo "static FIL __wbadfile;" >> ${{ github.workspace }}/build-dir/include/wolfssh/myFilesystem.h
          echo "#define WBADFILE (&__wbadfile)" >> ${{ github.workspace }}/build-dir/include/wolfssh/myFilesystem.h
          echo "#define ff_fopen(f, filename, m) ({ FIL* __f = malloc(sizeof(FIL)); *f = __f; f_open(__f, filename, m); })" >> ${{ github.workspace }}/build-dir/include/wolfssh/myFilesystem.h

      - name: Checkout, build, and test wolfssh
        uses: wolfSSL/actions-build-autotools-project@v1
        with:
          repository: wolfssl/wolfssh
          path: wolfssh
          configure: --enable-sftp --enable-all CPPFLAGS="-DWOLFSSH_FATFS -I${{ github.workspace }}/build-dir/include -I${{ github.workspace }}/build-dir/include/fatfs -I${{ github.workspace }}/build-dir/include/wolfssh" LDFLAGS="-L${{ github.workspace }}/build-dir/lib -L${{ github.workspace }}/build-dir/lib/fatfs -lfatfs"
          check: false
